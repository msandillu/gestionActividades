<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="com.prueba.administradortarea"/>

    <context:property-placeholder location="classpath:application.properties"
                                  ignore-unresolvable="true" ignore-resource-not-found="true"/>

    <!-- Factories -->
    <bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper"/>

    <!-- Parsers -->
    <bean id="jsonParser" class="com.prueba.administradortarea.parsers.JacksonJsonParser">
        <constructor-arg ref="objectMapper"/>
    </bean>

    <!-- Validators -->
    <bean id="validationBootstrap" class="javax.validation.Validation$GenericBootstrapImpl"/>
    <bean id="validatorConfig" factory-bean="validationBootstrap" factory-method="configure"/>
    <bean id="validatorFactory" factory-bean="validatorConfig" factory-method="buildValidatorFactory"/>
    <bean id="validator" factory-bean="validatorFactory" factory-method="getValidator"/>

    <!-- Controllers -->
    <bean id="taskController" class="com.prueba.administradortarea.controllers.TaskController">
        <constructor-arg ref="taskService"/>
        <constructor-arg ref="jsonParser"/>
        <constructor-arg ref="validator"/>
    </bean>

    <!-- Services -->
    <bean id="taskService" class="com.prueba.administradortarea.services.TaskServiceImpl">
        <constructor-arg ref="taskDAO"/>
    </bean>

    <bean id="userService" class="com.prueba.administradortarea.services.UserServiceImpl">
        <constructor-arg ref="apiUser"/>
    </bean>

    <!-- Repositories -->
   <bean id="taskDAO" class="com.prueba.administradortarea.repositories.TaskRepositoryImpl">
        <constructor-arg name="sessionFactory" ref="hibernate3AnnotatedSessionFactory"/>
    </bean>

    <!--MySQL -->
    <bean id="hibernate3AnnotatedSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="annotatedClasses">
            <list>
                <value>com.prueba.administradortarea.models.domain.Task</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
            </props>
        </property>
    </bean>
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/sys" />
        <property name="username" value="root" />
        <property name="password" value="" />
    </bean>

    <!-- H2 -->
    <bean id="h2AnnotatedSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSourceH2" />
        <property name="annotatedClasses">
            <list>
                <value>com.prueba.administradortarea.models.domain.Task</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
            </props>
        </property>
    </bean>
    <bean id="dataSourceH2" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="org.h2.Driver" />
        <property name="url" value="jdbc:h2:/home/msandillu/Documents/administrador-tareas/h2/test" />
        <property name="username" value="sa" />
        <property name="password" value="sa" />
    </bean>

    <!-- Authentication Handler-->
    <bean id="authenticationHandler" class="com.prueba.administradortarea.user.api.AuthenticationHandlerImpl">
        <constructor-arg ref="userService"/>
        <constructor-arg ref="jsonParser"/>
    </bean>

    <!-- API User-->
    <bean id="apiUser" class="com.prueba.administradortarea.user.api.external.ApiUserImpl">
        <constructor-arg value="${apiUser.login.url}"/>
        <constructor-arg value="${apiUser.login.userName}"/>
        <constructor-arg value="${apiUser.login.password}"/>
        <constructor-arg ref="CloseableHttpClient"/>
        <constructor-arg ref="httpHelper"/>
        <constructor-arg ref="jsonParser"/>
    </bean>

    <!-- Http client -->
    <bean id="requestConfigBuilder" class="org.apache.http.client.config.RequestConfig"
          factory-method="custom">
    </bean>
    <bean id="requestConfig" factory-bean="requestConfigBuilder" factory-method="build"/>
    <bean id="httpClientBuilder" class="org.apache.http.impl.client.HttpClientBuilder"
          factory-method="create">
        <property name="defaultRequestConfig" ref="requestConfig"/>
    </bean>
    <bean id="CloseableHttpClient" factory-bean="httpClientBuilder" factory-method="build"/>
    <bean id="httpHelper" class="com.prueba.administradortarea.helper.HttpHelperImpl"/>


</beans>
